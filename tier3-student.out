
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> Added class
Continue (y/n):> What order:> Added order
Continue (y/n):> What family:> Added family
Continue (y/n):> Add feature (y/n):> 
What feature:> Add feature (y/n):> 
What feature:> Add feature (y/n):> 
What feature:> Add feature (y/n):> Add summary (y/n):> Update genus count (0):> Update species count (0):> Add example (y/n):> What example:> Add example (y/n):> What example:> Add example (y/n):> What example:> Add example (y/n):> 
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> File name:> 
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> Class: mammalia
feature:
--Order: Carnivora
--feature:
----Family: canidae
----feature: tail, fangs, fur

------Genus: 12  Species: 27  Examples: dog, wolf, coyote
aves

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> What order:> What family:> java.lang.ClassCastException: class hohn_tanner.TaxonomyNode cannot be cast to class hohn_tanner.Family (hohn_tanner.TaxonomyNode and hohn_tanner.Family are in unnamed module of loader 'app')
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> java.lang.NumberFormatException: For input string: "n"
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> java.lang.NumberFormatException: For input string: "y"
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> Invalid option

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> Invalid option

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> java.lang.NumberFormatException: For input string: "y"
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> java.lang.NumberFormatException: For input string: "pheasant"
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> java.lang.NumberFormatException: For input string: "n"
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> What order:> Added order
Continue (y/n):> What family:> Added family
Continue (y/n):> Add feature (y/n):> 
What feature:> Add feature (y/n):> Add summary (y/n):> Update genus count (0):> Update species count (0):> Add example (y/n):> What example:> Add example (y/n):> 
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> Class: mammalia
feature:
--Order: Carnivora
--feature:
----Family: canidae
----feature: tail, fangs, fur

------Genus: 12  Species: 27  Examples: dog, wolf, coyote
aves

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> Removed mammalia

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> aves

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> Added class
Continue (y/n):> What order:> Added order
Continue (y/n):> What family:> Added family
Continue (y/n):> Add feature (y/n):> 
What feature:> Add feature (y/n):> 
What feature:> Add feature (y/n):> 
What feature:> Add feature (y/n):> Add summary (y/n):> Update genus count (0):> Update species count (0):> Add example (y/n):> What example:> Add example (y/n):> 
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> aves
Class: Chondrichthyes
feature:
--Order: Carcharhiniformes
--feature:
----Family: Sphyrnidae
----feature: dorsal fin, gills, carnivore

------Genus: 2  Species: 9  Examples: hammerhead shark

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> File name:> 
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> Class not found

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> Removed aves

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> File name:> 
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> Class: Chondrichthyes
feature:
--Order: Carcharhiniformes
--feature:
----Family: Sphyrnidae
----feature: dorsal fin, gills, carnivore

------Genus: 2  Species: 9  Examples: hammerhead shark
aves
Chondrichthyes

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> What class:> What order:> What family:> Add feature (y/n):> Add summary (y/n):> Update genus count (2):> Update species count (9):> Add example (y/n):> What example:> Add example (y/n):> 
1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> Class: Chondrichthyes
feature:
--Order: Carcharhiniformes
--feature:
----Family: Sphyrnidae
----feature: dorsal fin, gills, carnivore

------Genus: 2  Species: 9  Examples: hammerhead shark, bonnethead shark
aves
Chondrichthyes

1) Add data
2) Display data
3) Remove class
4) Load XML
5) Write XML
6) Find feature
7) Calculate species
0) Quit
Choice:> 
